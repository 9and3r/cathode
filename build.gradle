buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:2.1.3'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    classpath 'io.fabric.tools:gradle:1.+'
  }
}

allprojects {
  repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    mavenLocal()
  }
}

ext {
  enableCrashlytics = false
  versionMajor = 5
  versionMinor = 1
  versionPatch = 0

  versionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch
  versionName = versionMajor + "." + versionMinor + "." + versionPatch

  minSdkVersion = 16
  targetSdkVersion = 25

  compileSdkVersion = 25
  buildToolsVersion = '25.0.2'
}

ext.libraries = [
  junit: 'junit:junit:4.12',
  robolectric: 'org.robolectric:robolectric:3.1.2',
  truth: 'com.google.truth:truth:0.30',

  schematic: 'net.simonvt.schematic:schematic:0.6.8',
  schematicCompiler: 'net.simonvt.schematic:schematic-compiler:0.6.8',

  gson: 'com.google.code.gson:gson:2.7',

  appcompat: 'com.android.support:appcompat-v7:24.2.1',
  cardView: 'com.android.support:cardview-v7:24.2.1',
  recyclerView: 'com.android.support:recyclerview-v7:24.2.1',
  androidDesign: 'com.android.support:design:24.2.1',

  dagger: 'com.squareup.dagger:dagger:1.2.5',
  daggerCompiler: 'com.squareup.dagger:dagger-compiler:1.2.5',
  okhttp: 'com.squareup.okhttp3:okhttp:3.4.1',
  okhttpLogger: 'com.squareup.okhttp3:logging-interceptor:3.4.1',
  picasso: 'com.squareup.picasso:picasso:2.5.2',
  picassoOkHttp: 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0',
  retrofit: 'com.squareup.retrofit2:retrofit:2.1.0',
  retrofitGson: 'com.squareup.retrofit2:converter-gson:2.1.0',

  butterknife: 'com.jakewharton:butterknife:8.4.0',
  butterknifeCompiler: 'com.jakewharton:butterknife-compiler:8.4.0',
  timber: 'com.jakewharton.timber:timber:4.3.1',

  dashclockApi: 'com.google.android.apps.dashclock:dashclock-api:2.0.0',

  crashlytics: 'com.crashlytics.sdk.android:crashlytics:2.5.7@aar',

  tmdb: 'com.uwetrottmann.tmdb2:tmdb-java:1.3.0'
]

def getProperty(String propertyFile, String field) {
  def rootDir = project.rootDir
  def localProperties = new File(rootDir, propertyFile + ".properties")
  if (localProperties.exists()) {
    Properties properties = new Properties()
    localProperties.withInputStream { instr ->
      properties.load(instr)
    }
    def value = properties.getProperty(field)
    return value
  }

  return ""
}
